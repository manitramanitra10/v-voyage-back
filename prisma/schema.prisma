// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  name       String 
  email      String    @unique
  password   String
  role       Role
  bookings   Booking[]
  reviews    Review[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Trip {
  id         String    @id @default(uuid())
  title      String
  description String
  price      Float
  availableSeats Int
  startDate  DateTime
  endDate    DateTime
  tripSteps  TripStep[]
  bookings   Booking[]
  reviews    Review[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model TripStep {
  id         String    @id @default(uuid())
  tripId     String
  dayNumber  Int
  location   String
  description String
  trip       Trip      @relation(fields: [tripId], references: [id])
}

model Booking {
  id         String    @id @default(uuid())
  userId     String
  tripId     String
  status     BookingStatus
  user       User      @relation(fields: [userId], references: [id])
  trip       Trip      @relation(fields: [tripId], references: [id])
  payment    Payment?
  createdAt  DateTime  @default(now())
}

model Payment {
  id         String    @id @default(uuid())
  bookingId  String @unique
  amount     Float
  status     PaymentStatus
  method     PaymentMethod
  booking    Booking   @relation(fields: [bookingId], references: [id])
  createdAt  DateTime  @default(now())
}

model Review {
  id         String    @id @default(uuid())
  userId     String
  tripId     String
  rating     Int     
  comment    String?
  user       User      @relation(fields: [userId], references: [id])
  trip       Trip      @relation(fields: [tripId], references: [id])
  createdAt  DateTime  @default(now())
}

enum Role {
  ADMIN
  TRAVELER
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

enum PaymentMethod {
  CREDIT_CARD
  PAYPAL
  BANK_TRANSFER
}